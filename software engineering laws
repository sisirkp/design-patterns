1. MURPHY'S LAW
  If something can go wrong, it will.
  
2. BROOK'S LAW
  Adding manpower to a late software project makes it later.
  
3. HOFSTADTER'S LAW
  It always takes longer than you expect, even when you take into account Hofstadter's Law.
  
4. CONWAYâ€™S LAW
  Any piece of software reflects the organizational structure that produced it.
  or
  Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations.
  
5. POSTEL'S LAW AKA ROBUSTNESS PRINCIPLE
  Be conservative in what you send, be liberal in what you accept
  
6. PARETO PRINCIPLE AKA THE 80-20 RULE
  For many phenomena, 80% of consequences stem from 20% of the causes.
  
7. THE PETER PRINCIPLE
  In a hierarchy, every employee tends to rise to his level of incompetence.
  
8. KERCHKHOFF'S PRINCIPLE
  In cryptography, a system should be secure even if everything about the system, except for a small piece of information - the key - is public knowledge.
  
9. LINUS'S LAW
  Given enough eyeballs, all bugs are shallow.
  
10. MOORE'S LAW
  The power of computers per unit cost doubles every 24 month.
  or
  The number of transistors on an integrated circuit will double in about 18 months.
  or
  The processing speed of computers will double every two years!
  
11. WIRTH'S LAW
  Software gets slower faster than hardware gets faster.
  
12. NINETY-NINETY RULE
  The first 90% of the code takes 10% of the time. The remaining 10% takes the other 90% of the time
  
13. KNUTH'S OPTIMIZATION PRINCIPLE
  Premature optimization is the root of all evil.
  
14. NORVIG'S LAW
  Any technology that surpasses 50% penetration will never double again (in any number of months).
